<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	 <annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	 <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<beans:property name="url" value="jdbc:sqlserver://10.0.0.116:1433;databaseName=divyangjan" />
		<!-- <beans:property name="url" value="jdbc:sqlserver://125.62.194.228:1433;databaseName=divyangjan" /> -->
		<beans:property name="username" value="sa" />
		<beans:property name="password" value="krishna1521" /> 
		<!-- <beans:property name="password" value="Blue@!@#$" /> -->
				
	</beans:bean>
		
		
	<beans:bean id="loginDAO" class="com.spring.dao.LoginDAOImpl">
	<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean id="loginService" class="com.spring.service.LoginServiceImpl">
	<beans:property name="loginDAO" ref="loginDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="pwdDAO" class="com.spring.dao.PwdDAOImpl">
	<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean id="pwdService" class="com.spring.service.PwdServiceImpl">
	<beans:property name="pwdDAO" ref="pwdDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="agencyDao"
		class="com.spring.dao.AgencyDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="agencyService"
		class="com.spring.service.AgencyServiceImpl">
		<beans:property name="agencyDao" ref="agencyDao"></beans:property>
	</beans:bean>
		
		
		
		
		<beans:bean id="volunteerDao"	class="com.spring.dao.VolunteerDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="volunteerService"	class="com.spring.service.VolunteerServiceImpl">
		<beans:property name="volunteerDao" ref="volunteerDao"></beans:property>
	</beans:bean>
	
	<beans:bean id="adminDao"	class="com.spring.dao.AdminDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="adminService"	class="com.spring.service.AdminServiceImpl">
		<beans:property name="adminDao" ref="adminDao"></beans:property>
	</beans:bean>
		
		
		<beans:bean id="homeDao"
		class="com.spring.dao.HomeDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="homeService"
		class="com.spring.service.HomeServiceImpl">
		<beans:property name="homeDao" ref="homeDao"></beans:property>
	</beans:bean>
		
		
		
		
		
	<context:component-scan base-package="com.spring.controller"/>
	
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		 <!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="10000000" /> <!-- 10GB -->

	</beans:bean>
  	
	
	<!-- Enable Annotation based Declarative Transaction Management -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	
	
	<!-- Creating TransactionManager Bean, since JDBC we are creating of type 	DataSourceTransactionManager -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean> 
	
	
</beans:beans>
